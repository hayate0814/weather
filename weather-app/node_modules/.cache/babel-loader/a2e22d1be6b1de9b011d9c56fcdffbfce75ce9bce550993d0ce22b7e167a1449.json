{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OPST-6709\\\\Desktop\\\\react\\\\react-guide-material\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport SearchForm from './components/SearchForm';\nimport WeatherDisplay from './components/WeatherDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [cityName, setCityName] = useState('');\n  const [headerColor, setHeaderColor] = useState(''); // 追加\n\n  const handleSearch = async cityCode => {\n    const apiUrl = `https://weather.tsukumijima.net/api/forecast/city/${cityCode}`;\n    try {\n      const response = await axios.get(apiUrl);\n      setWeatherData(response.data);\n      setCityName(response.data.location.city);\n    } catch (e) {\n      console.error(\"Error fetching weather data:\", e);\n    }\n  };\n  useEffect(() => {\n    // ページがロードされたときと1分ごとにヘッダーの色を更新\n    updateHeaderColor();\n    const intervalId = setInterval(updateHeaderColor, 60000); // 1分ごと\n    return () => clearInterval(intervalId);\n  }, []);\n  const updateHeaderColor = () => {\n    const now = new Date();\n    const hours = now.getHours();\n\n    // グラデーションを使った例\n    const color = `rgb(${Math.round(255 * (hours / 24))}, 100, 100)`;\n    setHeaderColor(color);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: headerColor\n      },\n      children: \"Weather Forecast App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n      cityName: cityName,\n      forecasts: weatherData.forecasts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yydlcI1FDktrmZc4/Av5pmXLmKg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","SearchForm","WeatherDisplay","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","cityName","setCityName","headerColor","setHeaderColor","handleSearch","cityCode","apiUrl","response","get","data","location","city","e","console","error","updateHeaderColor","intervalId","setInterval","clearInterval","now","Date","hours","getHours","color","Math","round","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","forecasts","_c","$RefreshReg$"],"sources":["C:/Users/OPST-6709/Desktop/react/react-guide-material/weather-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport SearchForm from './components/SearchForm';\nimport WeatherDisplay from './components/WeatherDisplay';\n\nconst App = () => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [cityName, setCityName] = useState('');\n  const [headerColor, setHeaderColor] = useState(''); // 追加\n\n  const handleSearch = async (cityCode) => {\n    const apiUrl = `https://weather.tsukumijima.net/api/forecast/city/${cityCode}`;\n    try {\n      const response = await axios.get(apiUrl);\n      setWeatherData(response.data);\n      setCityName(response.data.location.city);\n    } catch (e) {\n      console.error(\"Error fetching weather data:\", e);\n    }\n  };\n\n  useEffect(() => {\n    // ページがロードされたときと1分ごとにヘッダーの色を更新\n    updateHeaderColor();\n    const intervalId = setInterval(updateHeaderColor, 60000); // 1分ごと\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const updateHeaderColor = () => {\n    const now = new Date();\n    const hours = now.getHours();\n\n    // グラデーションを使った例\n    const color = `rgb(${Math.round(255 * (hours / 24))}, 100, 100)`;\n    setHeaderColor(color);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1 style={{ color: headerColor }}>Weather Forecast App</h1>\n      <SearchForm onSearch={handleSearch} />\n      {weatherData && <WeatherDisplay cityName={cityName} forecasts={weatherData.forecasts} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD,MAAMe,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACvC,MAAMC,MAAM,GAAI,qDAAoDD,QAAS,EAAC;IAC9E,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAACF,MAAM,CAAC;MACxCP,cAAc,CAACQ,QAAQ,CAACE,IAAI,CAAC;MAC7BR,WAAW,CAACM,QAAQ,CAACE,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC;IAC1C,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEF,CAAC,CAAC;IAClD;EACF,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACd;IACAyB,iBAAiB,CAAC,CAAC;IACnB,MAAMC,UAAU,GAAGC,WAAW,CAACF,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;IAC1D,OAAO,MAAMG,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMI,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,KAAK,GAAGF,GAAG,CAACG,QAAQ,CAAC,CAAC;;IAE5B;IACA,MAAMC,KAAK,GAAI,OAAMC,IAAI,CAACC,KAAK,CAAC,GAAG,IAAIJ,KAAK,GAAG,EAAE,CAAC,CAAE,aAAY;IAChElB,cAAc,CAACoB,KAAK,CAAC;EACvB,CAAC;EAED,oBACE5B,OAAA;IAAK+B,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BhC,OAAA;MAAIiC,KAAK,EAAE;QAAEL,KAAK,EAAErB;MAAY,CAAE;MAAAyB,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5DrC,OAAA,CAACH,UAAU;MAACyC,QAAQ,EAAE7B;IAAa;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrClC,WAAW,iBAAIH,OAAA,CAACF,cAAc;MAACO,QAAQ,EAAEA,QAAS;MAACkC,SAAS,EAAEpC,WAAW,CAACoC;IAAU;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrF,CAAC;AAEV,CAAC;AAACnC,EAAA,CAvCID,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AAyCT,eAAeA,GAAG;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}