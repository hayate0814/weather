{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OPST-6709\\\\Desktop\\\\react\\\\react-guide-material\\\\weather-app\\\\src\\\\App.js\";\n// WeatherDisplay.js\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherDisplay = ({\n  cityName,\n  forecasts\n}) => {\n  // 仮の天気状態\n  const currentWeather = \"晴のち曇\";\n  const getWeatherIcon = () => {\n    switch (currentWeather) {\n      case \"晴のち曇\":\n        return \"sunny-icon.png\";\n      case \"雨\":\n        return \"rainy-icon.png\";\n      case \"曇り\":\n        return \"cloudy-icon.png\";\n      // 他の天気状態にも対応するように追加\n      default:\n        return \"default-icon.png\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `Weather Forecast for ${cityName}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: getWeatherIcon(),\n      alt: \"Weather Icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: forecasts.map((forecast, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [forecast.dateLabel, \" \", forecast.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `最高気温: ${forecast.temperature.max ? forecast.temperature.max.celsius : \"N/A\"}°C`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `最低気温: ${forecast.temperature.min ? forecast.temperature.min.celsius : \"N/A\"}°C`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: forecast.telop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = WeatherDisplay;\nexport default WeatherDisplay;\nvar _c;\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","WeatherDisplay","cityName","forecasts","currentWeather","getWeatherIcon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","forecast","index","dateLabel","date","temperature","max","celsius","min","telop","_c","$RefreshReg$"],"sources":["C:/Users/OPST-6709/Desktop/react/react-guide-material/weather-app/src/App.js"],"sourcesContent":["// WeatherDisplay.js\nimport React from \"react\";\n\nconst WeatherDisplay = ({ cityName, forecasts }) => {\n  // 仮の天気状態\n  const currentWeather = \"晴のち曇\";\n\n  const getWeatherIcon = () => {\n    switch (currentWeather) {\n      case \"晴のち曇\":\n        return \"sunny-icon.png\";\n      case \"雨\":\n        return \"rainy-icon.png\";\n      case \"曇り\":\n        return \"cloudy-icon.png\";\n      // 他の天気状態にも対応するように追加\n      default:\n        return \"default-icon.png\";\n    }\n  };\n\n  return (\n    <div className=\"weather-container\">\n      <h2>{`Weather Forecast for ${cityName}`}</h2>\n      <img src={getWeatherIcon()} alt=\"Weather Icon\" />\n      <ul>\n        {forecasts.map((forecast, index) => (\n          <li key={index}>\n            <p>\n              {forecast.dateLabel} {forecast.date}\n            </p>\n            <p>{`最高気温: ${\n              forecast.temperature.max\n                ? forecast.temperature.max.celsius\n                : \"N/A\"\n            }°C`}</p>\n            <p>{`最低気温: ${\n              forecast.temperature.min\n                ? forecast.temperature.min.celsius\n                : \"N/A\"\n            }°C`}</p>\n            <p>{forecast.telop}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default WeatherDisplay;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EAClD;EACA,MAAMC,cAAc,GAAG,MAAM;EAE7B,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,QAAQD,cAAc;MACpB,KAAK,MAAM;QACT,OAAO,gBAAgB;MACzB,KAAK,GAAG;QACN,OAAO,gBAAgB;MACzB,KAAK,IAAI;QACP,OAAO,iBAAiB;MAC1B;MACA;QACE,OAAO,kBAAkB;IAC7B;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKM,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCP,OAAA;MAAAO,QAAA,EAAM,wBAAuBL,QAAS;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7CX,OAAA;MAAKY,GAAG,EAAEP,cAAc,CAAC,CAAE;MAACQ,GAAG,EAAC;IAAc;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDX,OAAA;MAAAO,QAAA,EACGJ,SAAS,CAACW,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7BhB,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAAO,QAAA,GACGQ,QAAQ,CAACE,SAAS,EAAC,GAAC,EAACF,QAAQ,CAACG,IAAI;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACJX,OAAA;UAAAO,QAAA,EAAK,SACHQ,QAAQ,CAACI,WAAW,CAACC,GAAG,GACpBL,QAAQ,CAACI,WAAW,CAACC,GAAG,CAACC,OAAO,GAChC,KACL;QAAG;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACTX,OAAA;UAAAO,QAAA,EAAK,SACHQ,QAAQ,CAACI,WAAW,CAACG,GAAG,GACpBP,QAAQ,CAACI,WAAW,CAACG,GAAG,CAACD,OAAO,GAChC,KACL;QAAG;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACTX,OAAA;UAAAO,QAAA,EAAIQ,QAAQ,CAACQ;QAAK;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAdhBK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACa,EAAA,GA5CIvB,cAAc;AA8CpB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}