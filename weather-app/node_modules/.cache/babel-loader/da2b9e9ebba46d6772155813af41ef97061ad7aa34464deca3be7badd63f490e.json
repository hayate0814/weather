{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\OPST-6709\\\\Desktop\\\\react\\\\react-guide-material\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport SearchForm from './components/SearchForm';\nimport WeatherDisplay from './components/WeatherDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [cityName, setCityName] = useState('');\n  const handleSearch = async selectedPrefecture => {\n    if (!selectedPrefecture) {\n      // 選択されていない場合は何もしないかエラー処理を行う\n      return;\n    }\n\n    // ここで都道府県コードに基づいて都市コードを設定\n    const cityCode = `${selectedPrefecture}010`;\n    const apiUrl = `https://weather.tsukumijima.net/api/forecast/city/${cityCode}`;\n    try {\n      const response = await axios.get(apiUrl);\n      setWeatherData(response.data);\n      setCityName(response.data.location.city);\n    } catch (e) {\n      console.error('Error fetching weather data:', e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Forecast App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n      cityName: cityName,\n      forecasts: weatherData.forecasts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"tq4Fb5ueIcFO/SelwVMsSBo4W+s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","SearchForm","WeatherDisplay","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","cityName","setCityName","handleSearch","selectedPrefecture","cityCode","apiUrl","response","get","data","location","city","e","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","forecasts","_c","$RefreshReg$"],"sources":["C:/Users/OPST-6709/Desktop/react/react-guide-material/weather-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport SearchForm from './components/SearchForm';\nimport WeatherDisplay from './components/WeatherDisplay';\n\nconst App = () => {\n  const [weatherData, setWeatherData] = useState(null);\n  const [cityName, setCityName] = useState('');\n\n  const handleSearch = async (selectedPrefecture) => {\n    if (!selectedPrefecture) {\n      // 選択されていない場合は何もしないかエラー処理を行う\n      return;\n    }\n\n    // ここで都道府県コードに基づいて都市コードを設定\n    const cityCode = `${selectedPrefecture}010`;\n    const apiUrl = `https://weather.tsukumijima.net/api/forecast/city/${cityCode}`;\n    \n    try {\n      const response = await axios.get(apiUrl);\n      setWeatherData(response.data);\n      setCityName(response.data.location.city);\n    } catch (e) {\n      console.error('Error fetching weather data:', e);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>Weather Forecast App</h1>\n      <SearchForm onSearch={handleSearch} />\n      {weatherData && <WeatherDisplay cityName={cityName} forecasts={weatherData.forecasts} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,YAAY,GAAG,MAAOC,kBAAkB,IAAK;IACjD,IAAI,CAACA,kBAAkB,EAAE;MACvB;MACA;IACF;;IAEA;IACA,MAAMC,QAAQ,GAAI,GAAED,kBAAmB,KAAI;IAC3C,MAAME,MAAM,GAAI,qDAAoDD,QAAS,EAAC;IAE9E,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAACF,MAAM,CAAC;MACxCN,cAAc,CAACO,QAAQ,CAACE,IAAI,CAAC;MAC7BP,WAAW,CAACK,QAAQ,CAACE,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC;IAC1C,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEF,CAAC,CAAC;IAClD;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKmB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BpB,OAAA;MAAAoB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BxB,OAAA,CAACH,UAAU;MAAC4B,QAAQ,EAAElB;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrCrB,WAAW,iBAAIH,OAAA,CAACF,cAAc;MAACO,QAAQ,EAAEA,QAAS;MAACqB,SAAS,EAAEvB,WAAW,CAACuB;IAAU;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrF,CAAC;AAEV,CAAC;AAACtB,EAAA,CA9BID,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAgCT,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}